{"version":3,"sources":["components/Square.js","components/Board.js","components/History.js","components/Message.js","App.js","Calculate.js","index.js"],"names":["Square","value","onClick","iswinnerindex","newvalue","type","className","style","color","fontWeight","Board","board","squarehandler","winnerindex","rendersquare","position","includes","History","history","moveTo","currentMove","map","_","move","Message","winner","current","noMoreleft","every","element","isNext","App","NEWGAME","Array","fill","useState","sethistory","setcurrentMove","console","log","squares","lines","i","length","a","b","c","calculateWinner","prev","last","newboard","square","pos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f32e29ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Board.css';\r\n\r\nconst Square = ({value, onClick, iswinnerindex}) => {\r\n    const newvalue = value;\r\n    return (\r\n        <button type=\"button\" className=\"btn\" style={{color : newvalue === 'X'? 'orange':'red', fontWeight: iswinnerindex? 'bold' : 'normal'}} onClick={onClick}>{value}</button>\r\n    )\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({board, squarehandler, winnerindex}) => {\r\n    const rendersquare = (position) =>{\r\n         const iswinnerindex = winnerindex.includes(position);\r\n        return(\r\n            <Square value={board[position]} \r\n            iswinnerindex={iswinnerindex}\r\n             onClick ={()=>{squarehandler(position)}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <div className=\"board-row\">\r\n                {rendersquare(0)}\r\n                {rendersquare(1)}\r\n                {rendersquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {rendersquare(3)}\r\n                {rendersquare(4)}\r\n                {rendersquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {rendersquare(6)}\r\n                {rendersquare(7)}\r\n                {rendersquare(8)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport './Board.css'\r\n\r\nconst History = ({history, moveTo, currentMove}) => {\r\n    return (\r\n        <div className=\"history\">\r\n        <ul style={{color : \"rgb(0, 167, 0)\" }}>\r\n            {history.map((_,move)=>{\r\n                return(\r\n                    <li  key={move}>\r\n                        <button style = {{fontWeight : move === currentMove ? \"bold\" : \"normal\", color : move === currentMove? 'rgb(0, 167, 0)' : 'white'}} onClick={()=>{moveTo(move);}} type=\"button\">{move===0? 'Go to the game' : `Go to move #${move}`}</button>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\n\r\nconst Message = ({winner, current}) => {\r\n    const noMoreleft = current.board.every((element) =>{\r\n        return element !== null;\r\n    })\r\n    return (\r\n        <h2>\r\n            {winner && (\r\n            <> Winner is {' '}\r\n                <span style={{color : 'rgb(0, 167, 0)'}}>\r\n                    {winner}\r\n                </span>\r\n            </>)}\r\n            {!winner && !noMoreleft && (\r\n            <> Next Turn is {current.isNext? <span style ={{color : 'orange'}}>X</span> : <span style={{color :\"red\"}}>O</span>}\r\n            </>)}\r\n            {!winner && noMoreleft && (\r\n            <> <span style ={{color : 'orange'}} >X</span> and <span style ={{color : 'red'}}>O</span> tied\r\n            </>)}\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React,{useState} from 'react';\nimport Board from './components/Board';\nimport './App.css';\nimport { calculateWinner } from './Calculate';\nimport History from './components/History';\nimport Message from './components/Message';\n\nfunction App() {\n    const NEWGAME= [ {board :Array(9).fill(null) , isNext : true} ];\n    const [history, sethistory] = useState(NEWGAME);\n    // const [board, setboard] = useState();\n    // const [isNext, setisNext] = useState(false);\n    const [currentMove , setcurrentMove] = useState(0);\n\n    const current = history[currentMove];  \n    console.log(history);\n    \n    const {winner, winnerindex} = calculateWinner(current.board);\n\n\n    const squarehandler=(position)=>{\n        // console.log(position);\n        if(current.board[position] || winner ){\n            return;\n        }\n        sethistory((prev)=>{\n            const last = prev[prev.length -1];\n            const newboard=  last.board.map((square, pos) =>{\n                if(pos === position){\n                    return last.isNext? 'X':'O';\n                }\n                return square;\n            })\n            // return prev.concat({ board: newboard , isNext: !last.isNext});\n            return [...prev,{board: newboard , isNext: !last.isNext} ];\n        });\n        setcurrentMove((value) =>{return value +1;})\n        // setisNext((prev) =>{return !prev});\n    };\n    const moveTo = (move)=>{\n        setcurrentMove(move);\n    }\n    const NewGame = ()=>{\n        sethistory(NEWGAME);\n        setcurrentMove(0);\n    }\n  return (\n    <div className=\"app\">\n    <h1>TIC <span style = {{color: 'rgb(0, 167, 0)'}} >TAC</span> TOE</h1>\n    {/* <h2>{message}</h2> */}\n    <Message winner = {winner} current = {current} />\n    <Board board={current.board} squarehandler={squarehandler} winnerindex={winnerindex} />\n    <button type=\"button\" onClick={NewGame} className={`btn-reset ${winner && 'btn-reset-active'}`}>Start New Game</button>\n    <h2>Current Game History</h2>\n    <History history={history} moveTo={moveTo} currentMove={currentMove} />\n    </div>\n  );\n}\n\nexport default App;\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      // console.log(a, b, c);\r\n        // return squares[a];\r\n        return{\r\n          winner : squares[a],\r\n          winnerindex : [a,b,c],\r\n        }\r\n      }\r\n    }\r\n    return {\r\n        winner : null,\r\n        winnerindex : [],\r\n    };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}